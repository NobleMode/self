<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/ico" href="favicon1.ico" />
  <title>PROJECT TEAM 6</title>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
    rel="stylesheet" />

  <!-- DaisyUI-->
  <link href="https://cdn.jsdelivr.net/npm/daisyui@4.7.2/dist/full.min.css" rel="stylesheet" type="text/css" />
  <script src="https://cdn.tailwindcss.com"></script>

  <!-- Icons-->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />

  <!-- CSS -->
  {{!--
  <link href="../views/main.css" rel="stylesheet" type="text/css" /> --}}
</head>

<style>
  .header {
    display: flex;
    align-items: flex-end;
    justify-content: space-between;
    background-color: #fff;
    padding: 10px;
    font-family: Roboto, sans-serif;
  }



  .header img {
    width: 100px;
    height: 100px;
  }

  :root {
    background-color: #fff;
  }

  body {
    margin: 0;
  }

  .menu {
    background-color: #ad0214;
    text-color: white;
  }

  .menu-bar {
    display: flex;
    justify-content: space-around;
    align-items: center;
    background-color: #ffe6e9;
    font-family: Roboto, sans-serif;
    font-weight: bold;
    width: 100%;
  }

  .tab-buttons {
    display: grid;

    width: 100%;
    /* justify-content: space-around; */
  }

  .menu-buttons {
    padding-left: 10em;
    border-radius: 0;
  }

  .menu-button {
    color: #ad0214;
    padding: 0.5em 0;
    background-color: #ffe6e9;
    text-align: center;
    border-radius: 0;
    border: 0;
  }

  .click:hover {
    color: #fff;
    background-color: #ad0214;
  }


  .menu-button:hover {
    color: #fff;
    background-color: #ad0214;
  }

  .mdi--filter-outline {
    display: inline-block;
    width: 2em;
    height: 2em;
    color: #fff;
    margin-top: 5px;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23ad0214' d='M15 19.88c.04.3-.06.62-.29.83a.996.996 0 0 1-1.41 0L9.29 16.7a.989.989 0 0 1-.29-.83v-5.12L4.21 4.62a1 1 0 0 1 .17-1.4c.19-.14.4-.22.62-.22h14c.22 0 .43.08.62.22a1 1 0 0 1 .17 1.4L15 10.75zM7.04 5L11 10.06v5.52l2 2v-7.53L16.96 5z'/%3E%3C/svg%3E");
  }

  .mdi--filter-outline:hover {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23ffffff' d='M15 19.88c.04.3-.06.62-.29.83a.996.996 0 0 1-1.41 0L9.29 16.7a.989.989 0 0 1-.29-.83v-5.12L4.21 4.62a1 1 0 0 1 .17-1.4c.19-.14.4-.22.62-.22h14c.22 0 .43.08.62.22a1 1 0 0 1 .17 1.4L15 10.75zM7.04 5L11 10.06v5.52l2 2v-7.53L16.96 5z'/%3E%3C/svg%3E");
  }

  .ic--baseline-expand-more {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23ad0214' d='M16.59 8.59L12 13.17L7.41 8.59L6 10l6 6l6-6z'/%3E%3C/svg%3E");
  }
</style>

<script>
  function showProfile() {
    var profile = document.querySelector(".profile");

    if (profile.style.display != "block") {
      profile.style.display = "block";
      profile.classList.add("slide-left");
    } else {
      profile.style.display = "none";
    }
  }
</script>

<script>
  function showNotification() {
    var profile = document.querySelector(".notification");

    if (profile.style.display != "block") {
      profile.style.display = "block";
      profile.classList.add("slide-left");
    } else {
      profile.style.display = "none";
    }
  }
</script>

<style>
  .slide-left {
    -webkit-animation: slide-left 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) 200ms both;
    animation: slide-left 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) 200ms both;
  }

  @-webkit-keyframes slide-left {
    0% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
    }

    100% {
      -webkit-transform: translateX(-350px);
      transform: translateX(-350px);
    }
  }

  @keyframes slide-left {
    0% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
    }

    100% {
      -webkit-transform: translateX(-350px);
      transform: translateX(-350px);
    }
  }
</style>

<body>
  {{> header}}

  <div class="my-12">
    <div class="flex flex-row justify-between w-full px-16">
        <div  class="flex flex-row gap-4">
          <label  class="input border bg-white border-[#ad0214] rounded-2xl flex items-center gap-2 h-12 w-96">
            <span class="material-icons" aria-hidden="true" style="color: #ad0214; margin: 0 0.5em;">
              search
            </span>
            <input id="searchInput" type="text" class="grow w-full" placeholder="Search" style="color: #ad0214;" />
          </label>
        </div>
      
        <div class="flex flex-row gap-2">
          <button id="deleteButton" class="btn rounded-lg menu-button flex material-icons" style="width: 45px">
            delete
          </button>
          <button class="btn rounded-lg menu-button flex material-icons"
            style="width: 45px;">
            <a href="/updateInsert?id=new">add</a>
          </button>
        </div>
    </div>

    <div id="table" class="bg-red-50 rounded-3xl mx-16 my-4 h-[65vh] p-4">
      <div class="grid grid-cols-[100px_repeat(13,minmax(0,1fr))_100px] text-center font-bold text-[#ad0214] gap-2 p-4">
        <div class="bg-red-200 py-2 px-4 rounded-xl col-span-1 flex flex-row justify-center items-center">STT</div>
        <div class="bg-red-200 py-2 px-4 rounded-xl col-span-2 flex flex-row justify-center items-center">
          MSSV
          <div class="dropdown dropdown-hover">
            <div tabindex="0" class="m-1 flex material-icons">
              arrow_drop_down
            </div>
            <ul
              tabindex="0"
              class="dropdown-content z-[1] menu shadow bg-[#ffedee] rounded-lg w-16"
            >
              <li class="click rounded-lg"><a>All</a></li>
              <li class="click rounded-lg"><a>HA</a></li>
              <li class="click rounded-lg"><a>HE</a></li>
              <li class="click rounded-lg"><a>HS</a></li>
            </ul>
          </div>
        </div>
        <div class="bg-red-200 py-2 px-4 rounded-xl col-span-3 flex flex-row justify-center items-center">
          Họ Tên
          <div class="dropdown dropdown-hover">
            <div tabindex="0" class="flex flex-row material-icons">
              arrow_drop_down

            </div>
            <ul
              tabindex="0"
              class="dropdown-content z-[1] w-20 menu shadow bg-[#ffedee] rounded-lg"
            >
              <li class="click rounded-lg"><a>No Sort</a></li>
              <li class="click rounded-lg"><a>A - Z</a></li>
              <li class="click rounded-lg"><a>Z - A</a></li>
            </ul>
          </div>
        </div>
        <div class="bg-red-200 py-2 px-4 rounded-xl col-span-2 flex flex-row justify-center items-center">
          Ban
          <div class="dropdown dropdown-hover">
            <div tabindex="0" class="m-1 flex material-icons">
              arrow_drop_down
            </div>
            <ul tabindex="0" class="dropdown-content z-[1] menu shadow bg-[#ffedee] rounded-lg w-44">
              <li class="click rounded-lg"><a>All</a></li>
              <li class="click rounded-lg"><a>Chuyên môn</a></li>
              <li class="click rounded-lg"><a>Truyền thông</a></li>
              <li class="click rounded-lg"><a>Văn hóa</a></li>
              <li class="click rounded-lg"><a>Đối ngoại</a></li>
              <li class="click rounded-lg"><a>Nội dung</a></li>
            </ul>
          </div>
        </div>
        <div class="bg-red-200 py-2 px-4 rounded-xl col-span-2 flex flex-row justify-center items-center">
          Vai Trò
          <div class="dropdown dropdown-hover">
            <div tabindex="0" class="m-1 flex material-icons">
              arrow_drop_down
            </div>
            <ul tabindex="0" class="dropdown-content z-[1] menu shadow bg-[#ffedee] rounded-lg w-44">
              <li class="click rounded-lg"><a>All</a></li>
              <li class="click rounded-lg"><a>Chủ nhiệm</a></li>
              <li class="click rounded-lg"><a>Phó chủ nhiệm</a></li>
              <li class="click rounded-lg"><a>Trưởng ban</a></li>
              <li class="click rounded-lg"><a>Thành viên</a></li>
              <li class="click rounded-lg"><a>Cộng tác viên</a></li>
            </ul>
          </div>
        </div>
        <div class="bg-red-200 py-2 px-4 rounded-xl col-span-3 flex flex-row justify-center items-center">Mail</div>
        <div class="bg-red-200 py-2 px-4 rounded-xl col-span-1 flex flex-row justify-center items-center">
          Gen
          <div class="dropdown dropdown-hover">
            <div tabindex="0" class="flex flex-row material-icons">
              arrow_drop_down
            </div>
            <ul
              tabindex="0"
              class="dropdown-content z-[1] w-28 menu shadow bg-[#ffedee] rounded-lg"
            >
              <li class="click rounded-lg"><a>No Sort</a></li>
              <li class="click rounded-lg material-icons"><a>keyboard_double_arrow_up</a></li>
              <li class="click rounded-lg material-icons"><a>keyboard_double_arrow_down</a></li>
            </ul>
          </div>
        </div>
        <div class="bg-red-200 py-2 px-4 rounded-xl col-span-1 flex flex-row justify-center items-center">Edit</div>
      </div>
      <div id="showList" class="flex flex-col overflow-y-auto h-[85%] pl-4">
        {{#each memList}}
        <div class="grid grid-cols-[100px_repeat(13,minmax(0,1fr))_100px] text-center font-bold text-[#ad0214] py-2 gap-2">
          <div class="bg-red-100 py-2 px-4 rounded-xl col-span-1">{{@index}}</div>
          <div class="bg-red-100 py-2 px-4 rounded-xl col-span-2">{{rollno}}</div>
          <div class="bg-red-100 py-2 px-4 rounded-xl col-span-3">{{name}}</div>
          <div class="bg-red-100 py-2 px-4 rounded-xl col-span-2">{{dept}}</div>
          <div class="bg-red-100 py-2 px-4 rounded-xl col-span-2">{{role}}</div>
          <div class="bg-red-100 py-2 px-4 rounded-xl col-span-3">{{mail}}</div>
          <div class="bg-red-100 py-2 px-4 rounded-xl col-span-1">{{gen}}</div>
          <div class="bg-red-100 py-2 px-4 rounded-xl col-span-1 flex flex-row justify-between">
            <input type="checkbox" id="editCheckbox" value="{{rollno}}">
            <a href="/updateInsert?id={{rollno}}" class="flex material-icons">
              edit
            </a>
          </div>
        </div>
        {{/each}}
      </div>
    </div>
  </div>
  
</body>

<script>
    window.onload = function() {
        var showListDiv = document.querySelector('#showList');
        if (showListDiv.scrollHeight > showListDiv.clientHeight) {
            // Scrollbar is visible, do nothing
        } else {
            // Scrollbar is not visible, add padding
            showListDiv.classList.add('pr-4');
        }
    };
</script>

<script>
    function updateShowList(members) {
      const showListDiv = document.querySelector('#showList');
      showListDiv.innerHTML = ''; // Clear the existing contents
      if (Array.isArray(members)) {
          members.forEach((member, index) => {
            const memberDiv = document.createElement('div');
            memberDiv.className = 'grid grid-cols-[100px_repeat(13,minmax(0,1fr))_100px] text-center font-bold text-[#ad0214] py-2 gap-2';
            
            const indexDiv = document.createElement('div');
            indexDiv.className = 'bg-red-100 py-2 px-4 rounded-xl col-span-1';
            indexDiv.textContent = index;
            memberDiv.appendChild(indexDiv);

            const rollnoDiv = document.createElement('div');
            rollnoDiv.className = 'bg-red-100 py-2 px-4 rounded-xl col-span-2';
            rollnoDiv.textContent = member.rollno;
            memberDiv.appendChild(rollnoDiv);

            const nameDiv = document.createElement('div');
            nameDiv.className = 'bg-red-100 py-2 px-4 rounded-xl col-span-3';
            nameDiv.textContent = member.name;
            memberDiv.appendChild(nameDiv);

            const deptDiv = document.createElement('div');
            deptDiv.className = 'bg-red-100 py-2 px-4 rounded-xl col-span-2';
            deptDiv.textContent = member.dept;
            memberDiv.appendChild(deptDiv);

            const roleDiv = document.createElement('div');
            roleDiv.className = 'bg-red-100 py-2 px-4 rounded-xl col-span-2';
            roleDiv.textContent = member.role;
            memberDiv.appendChild(roleDiv);

            const mailDiv = document.createElement('div');
            mailDiv.className = 'bg-red-100 py-2 px-4 rounded-xl col-span-3';
            mailDiv.textContent = member.mail;
            memberDiv.appendChild(mailDiv);

            const genDiv = document.createElement('div');
            genDiv.className = 'bg-red-100 py-2 px-4 rounded-xl col-span-1';
            genDiv.textContent = member.gen;
            memberDiv.appendChild(genDiv);

            const editDiv = document.createElement('div');
            editDiv.className = 'bg-red-100 py-2 px-4 rounded-xl col-span-1 flex flex-row justify-between';
            
            const editCheckbox = document.createElement('input');
            editCheckbox.type = 'checkbox';
            editCheckbox.id = 'deleteCheckbox';
            editCheckbox.value = member.rollno;
            editDiv.appendChild(editCheckbox);
            
            const editLink = document.createElement('a');
            editLink.href = '/updateInsert?id=' + member.rollno;
            editLink.className = 'flex material-icons';
            editLink.textContent = 'edit';
            editDiv.appendChild(editLink);
            
            memberDiv.appendChild(editDiv);

            showListDiv.appendChild(memberDiv);
          });
      } else {
          console.error('DB Error');
      }
    }

    document.querySelectorAll('.click a').forEach(function(a) {
        a.addEventListener('click', function(event) {
            event.preventDefault();
            const sortCriteria = a.textContent;
            fetch(`/infor/sort?criteria=${sortCriteria}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    updateShowList(data.members);
                  }
                )
                .catch(error => {
                  console.error('There has been a problem with your fetch operation:', error);
                });
        });
    });

    const searchInput = document.querySelector('#searchInput');
    searchInput.addEventListener('input', function() {
        const searchCriteria = searchInput.value;
        fetch(`/infor/search?criteria=${searchCriteria}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                updateShowList(data.members);
            })
            .catch(error => {
                console.error('There has been a problem with your fetch operation:', error);
            });
    });

    const deleteButton = document.querySelector('#deleteButton');
    deleteButton.addEventListener('click', function() {
        const selectedCheckboxes = document.querySelectorAll('#showList input[type="checkbox"]:checked');
        if (selectedCheckboxes.length > 0) {
            if (confirm('Are you sure you want to delete the selected members?')) {
                const selectedRollnos = Array.from(selectedCheckboxes).map(checkbox => checkbox.value);
                fetch('/infor/delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ rollnos: selectedRollnos }),
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    updateShowList(data.members);
                })
                .catch(error => {
                    console.error('There has been a problem with your fetch operation:', error);
                });
            }
        } else {
            alert('No members selected');
        }
    });
</script>

</html>